- cache work do
  %section.work{class: work.interest.token, itemscope: true}
    .row
      .medium-3.columns.medium-offset-2.medium-text-right.title-box
        %h3= work.decorate.title

        %p.years
          = work.years

        - unless work.mine?
          .author
            Written by
            %b= work.author.name
        -#/ [image]
        - if work.location.present?
          %p
            %span.location
              = work.location
            / %span.programs
            /   = work.tools.programs.map{|t| t.name}.join(', ')

        %p.admin{data: {visible_to: 'admin'}}
          %smaller.subdued= link_to(edit_icon, edit_work_path(work), rel: 'nofollow')
          %smaller.subdued= link_to(model_icon('role'), new_role_path(work_id: work.id), rel: 'nofollow')
          %smaller.subdued= link_to(destroy_icon, work, method: :delete, data: {confirm: 'Are you sure?'}, rel: 'nofollow')
      .medium-5.columns.end.info-box
        %p.artist
          by
          %b= work.party.name

        = work.decorate.titles_and_instruments
        - if work.series.any?
          %ul.series-list      
            - work.series.each do |series|
              %li
                From the album: 
                = link_to(series.name, series)
        %p.summary= work.summary
        %p.status
          Status: 
          = combo_status(work)


        - if work.tools.any?
          %p.tools
            %b Buzzwords:
            = raw(work.tools.map{|t| link_to(t.name, t)}.join(', '))

